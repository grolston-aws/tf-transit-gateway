name: "Deployment"

on:
  push:
    branches:
      - master

env:

  AWS_DEFAULT_REGION: us-west-2
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform-apply-us-east-1:
    if: github.ref == 'refs/heads/master'
    name: "Terraform Apply US-EAST-1"
    runs-on: ubuntu-latest
    steps:
      - name: "Setup - Checkout"
        uses: actions/checkout@v2.1.0

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - './terraform/us-east-1/**'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_DEFAULT_REGION}}

      - name: "Setup - Terraform CLI"
        uses: hashicorp/setup-terraform@v1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

      - name: "Run - Terraform Init"
        run: terraform init -input=false
        working-directory: ./terraform/us-east-1

      - name: "Run - Terraform fmt"
        id: format
        run: terraform fmt -check=true -diff=true
        working-directory: ./terraform

      - name: "Run - Terraform validate"
        id: validate
        run: terraform validate
        working-directory: ./terraform/us-east-1

      - name: "Run - Terraform Plan"
        if: steps.changes.outputs.src == 'true'
        id: plan
        run: terraform plan -input=false -no-color
        working-directory: ./terraform/us-east-1

      - name: "Run - Terraform Apply"
        if: steps.changes.outputs.src == 'true'
        id: deploy
        run: terraform apply -input=false -auto-approve
        working-directory: ./terraform/us-east-1

  terraform-apply-us-west-2:
    if: github.ref == 'refs/heads/master'
    name: "Terraform Apply US-WEST-2"
    runs-on: ubuntu-latest
    steps:
      - name: "Setup - Checkout"
        uses: actions/checkout@v2.1.0

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - './terraform/us-west-2/**'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_DEFAULT_REGION}}

      - name: "Setup - Terraform CLI"
        uses: hashicorp/setup-terraform@v1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

      - name: "Run - Terraform Init"
        run: terraform init -input=false
        working-directory: ./terraform/us-west-2

      - name: "Run - Terraform fmt"
        id: format
        run: terraform fmt -check=true -diff=true
        working-directory: ./terraform/us-west-2

      - name: "Run - Terraform validate"
        id: validate
        run: terraform validate
        working-directory: ./terraform/us-west-2

      - name: "Run - Terraform Plan"
        if: steps.changes.outputs.src == 'true'
        id: plan
        run: terraform plan -input=false -no-color
        working-directory: ./terraform/us-west-2

      - name: "Run - Terraform Apply"
        if: steps.changes.outputs.src == 'true'
        id: deploy
        run: terraform apply -input=false -auto-approve
        working-directory: ./terraform/us-west-2

  terraform-apply-us-east-2:
    if: github.ref == 'refs/heads/master'
    name: "Terraform Apply US-EAST-2"
    runs-on: ubuntu-latest
    steps:
      - name: "Setup - Checkout"
        uses: actions/checkout@v2.1.0

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - './terraform/us-east-2/**'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_DEFAULT_REGION}}

      - name: "Setup - Terraform CLI"
        uses: hashicorp/setup-terraform@v1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

      - name: "Run - Terraform Init"
        run: terraform init -input=false
        working-directory: ./terraform/us-east-2

      - name: "Run - Terraform fmt"
        id: format
        run: terraform fmt -check=true -diff=true
        working-directory: ./terraform/us-east-2

      - name: "Run - Terraform validate"
        id: validate
        run: terraform validate
        working-directory: ./terraform/us-east-2

      - name: "Run - Terraform Plan"
        if: steps.changes.outputs.src == 'true'
        id: plan
        run: terraform plan -input=false -no-color
        working-directory: ./terraform/us-east-2

      - name: "Run - Terraform Apply"
        if: steps.changes.outputs.src == 'true'
        id: deploy
        run: terraform apply -input=false -auto-approve
        working-directory: ./terraform/us-east-2
